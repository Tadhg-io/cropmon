const PubNub = require('pubnub');
const firebase = require('firebase');
const firebaseConfig = {
  apiKey: "AIzaSyDPueALXGKVUZJ5A32MN08Hze7yz1Ajx6c",
  authDomain: "cropmon-33704.firebaseapp.com",
  databaseURL: "https://cropmon-33704-default-rtdb.firebaseio.com",
  projectId: "cropmon-33704",
  storageBucket: "cropmon-33704.appspot.com",
  messagingSenderId: "1081325703691",
  appId: "1:1081325703691:web:ff1a7cfe4083c3ad8aad0e",
  measurementId: "G-3L4QQP7ESC"
};

// initialise the firebase db
const fbApp = firebase.initializeApp(firebaseConfig);
let database = firebase.database();

// constants for 
const credentials = {
    "publishKey": "pub-c-8fd5daec-f9e0-431f-b01b-b0acc0840aa4",
    "subscribeKey": "sub-c-49ee9850-49f3-11eb-a73a-1eec528e8f1f",
    "secretKey": "sub-c-49ee9850-49f3-11eb-a73a-1eec528e8f1f"
}
const CHANNELS = {
    CROPS: 'CROPS'
}

class PubSub {
    constructor() {
        this.pubnub = new PubNub(credentials);
    
        // subscribe to all channels
        this.pubnub.subscribe({ channels: Object.values(CHANNELS) });
    
        // this.pubnub.addListener({
        //     message: MessageObject => {
        //         const { channel, message } = MessageObject;

        //         console.log(`Message received. Channel: ${channel}. Message: ${message}`);

        //         // get the message that we received
        //         const parsedMessage = JSON.parse(message);

        //         database.ref(channel).set(message, function(error) {
        //             if (error) {
        //               // failure
        //               console.log("Failed to send to realtime database with error: " + error);
        //             } else {
        //               // success
        //               console.log("successfully sent to database");
        //             }
        //         });
        //     }
        // });

    }

    // listen for messages
    listener() {
        return  {
            message: MessageObject => {
                const { channel, message } = MessageObject;

                console.log(`Message received. Channel: ${channel}. Message: ${message}`);

                // get the message that we received
                const parsedMessage = JSON.parse(message);

                // switch(channel) {
                //     // if this was a message on the crops channel
                //     case CHANNELS.CROPS:
                //         // save the message to the database
                //         break;
                //     default:
                //         break;
                // }
            }
        }
    }

    // publish a mnessage
    publish({ channel, message }) {
        this.pubnub.publish({channel, message}); 
    }

    write({ key, message }) {
        // save the message to firebase
        database.ref(key).set(message, function(error) {
            if (error) {
              // failure
              console.log("Failed to send to realtime database with error: " + error);
            } else {
              // success
              console.log("successfully sent to database");
            }
        });
    }
}

module.exports = PubSub;